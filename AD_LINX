DEBIAN + AD:

Step  0: Configure NTP cliente. Sudo apt-get install ntp ntpdate and change file /etc/ntp.conf


Step 1: Check resolving

cat /etc/resolv.conf
here should be some think like
search ihb.local
nameserver 10.100.0.5
nameserver 10.100.0.6
Obs.: If dhcp is working 100% with domain, this manual config is not need.

Step 2: install software
sudo apt-get install sssd realmd -y
sudo apt-get install policykit-1
sudo apt-get install sssd-tools sssd libnss-sss libpam-sss adcli
sudo apt-get install packagekit

Step 3: try to join
realm join --user=hepta.alexsandro.f ihb.local
password for administrator:

Step 4: test join settings
realm list 
biopack.be 
type: kerberos 
realm-name: BIOPACK.BE 
domain-name: biopack.be 
configured: kerberos-member 
server-software: active-directory 
client-software: sssd 
required-package: oddjob 
required-package: oddjob-mkhomedir 
required-package: sssd 
required-package: adcli 
required-package: samba-common-tools 
login-formats: %U@biopack.be 
login-policy: allow-realm-logins

Vez uque 
Step 5: AD
if successfully the server should appear in ad

Step 6: id testing
id administrator 
id: administrator: no such user
id administrator@biopack.be 
uid=1829600500...

Step 7: change behaviour
nano /etc/sssd/sssd.conf
change
use_fully_qualified_names = False 
ad_gpo_access_control = permissive
#Fallback you can change to what you wish
fallback_homedir = /home/%u@%d
#i use /home/%d@%u 
on debian systems you need to create the domain directory your self 
mkdir /home/YOUR_NETBIOS_NAME

Step 8: Create group
Go to your ad and create a group give it some members.

Step 9: Create File
nano /etc/sudoers.d/sudoers 
%LinuxAdmins ALL=(ALL) ALL
#replace LinuxAdmins with your own group you created in ad.

Step 10: restart sssd
sysstemctl restart sssd

Step 11: ssh test
ssh in yo your box
ssh domainuser@localhost 
#request root priveleges 
sudo su 
execute : whoami 
this should return root

Step 12: Domain Leave
if you wish to leave domain execute:domain realm leave biopack.be

The only other trick you might like to do is adding “session required pam_mkhomedir.so skel=/etc/skel/ umask=0022” to /etc/pam.d/common-session to automatically create homedirs. 

Using SSH configuration
To /etc/ssh/sshd_config, add a AllowGroups line:
AllowGroups Domain Admin
From the manpage:
AllowGroups
    This keyword can be followed by a list of group name patterns,
    separated by spaces.  If specified, login is allowed only for
    users whose primary group or supplementary group list matches one
    of the patterns.
Domain Admin here doesn't match Domain Admin the group name, but two separate groups Domain and Admin. You'll have to use something like Domain*Admin and *it_admin, since neither  (space) nor (#) are usually valid characters in Linux groups. To be on the safer side, use ?instead of *: Domain?Admin and ?it_admin, so that only one character is allowed by the wildcard. You can also add a pattern-based DenyGroups section. See the PATTERNS section in man ssh_config.

You can do this in two ways. One is to let the SSH configuration filter, and the other is to use pam_access.
Using SSH configuration
To /etc/ssh/sshd_config, add a AllowGroups line:
AllowGroups Domain Admin
From the manpage:
AllowGroups
    This keyword can be followed by a list of group name patterns,
    separated by spaces.  If specified, login is allowed only for
    users whose primary group or supplementary group list matches one
    of the patterns.
Domain Admin here doesn't match Domain Admin the group name, but two separate groups Domain and Admin. You'll have to use something like Domain*Admin and *it_admin, since neither  (space) nor (#) are usually valid characters in Linux groups. To be on the safer side, use ?instead of *: Domain?Admin and ?it_admin, so that only one character is allowed by the wildcard. You can also add a pattern-based DenyGroups section. See the PATTERNS section in man ssh_config.

Using pam_access
Add lines to /etc/security/access.conf of the form:
- : ALL EXCEPT (Domain) (Admin) : ALL
There are plenty of comments in that file which document how to use it. man pam_access is quite bare, so most information would come from those comments. pam_access is more powerful in that it can control non-SSH logins as well (TTYs, GUI, etc.). This particular line, for example, should deny any user who does not have Domain or Admin as a group from logging in at all (unless other lines allow them).
Both approaches are pretty flexible, and I don't know the pros and cons, so no recommendations.

- [ ] 
